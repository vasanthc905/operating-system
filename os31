#include <stdio.h>
#include <stdlib.h>

#define MAX_FRAMES 3

void FIFO(int pages[], int n, int capacity) {
    int frame[MAX_FRAMES];
    int frameCount = 0;
    int pageFaults = 0;
    int frameIndex = 0;

    for (int i = 0; i < n; i++) {
        int page = pages[i];
        int found = 0;
        for (int j = 0; j < frameCount; j++) {
            if (frame[j] == page) {
                found = 1;
                break;
            }
        }

        if (!found) {
            if (frameCount < capacity) {
                frame[frameCount++] = page;
            } else {
                frame[frameIndex] = page;
                frameIndex = (frameIndex + 1) % capacity;
            }
            pageFaults++;
        }

        printf("Page %d -> ", page);
        for (int j = 0; j < frameCount; j++) {
            printf("%d ", frame[j]);
        }
        printf("\n");
    }
    printf("Total page faults: %d\n", pageFaults);
}

int main() {
    int pages[] = {7, 0, 1, 2, 0, 3, 0, 4, 2, 3, 0, 3, 2};
    int n = sizeof(pages) / sizeof(pages[0]);
    int capacity = MAX_FRAMES;

    printf("Page reference sequence: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", pages[i]);
    }
    printf("\n\n");

    printf("Simulation using FIFO:\n");
    FIFO(pages, n, capacity);

    return 0;
}
